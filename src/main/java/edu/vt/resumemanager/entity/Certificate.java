
package edu.vt.resumemanager.entity;

import jakarta.persistence.*;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Null;
import jakarta.validation.constraints.Size;
import lombok.Data;

import java.io.Serializable;
import java.util.Date;

// The @Entity annotation designates this class as a JPA Entity POJO class representing the database table Certificate.
@Entity
@Data
// Name of the database table represented
@Table(name = "Certificate")

@NamedQueries({
        @NamedQuery(name = "Certificate.findAll", query = "SELECT e FROM Certificate e")
        , @NamedQuery(name = "Certificate.findById", query = "SELECT e FROM Certificate e WHERE e.id = :id")
        , @NamedQuery(name = "Certificate.findByUserId", query = "SELECT e FROM Certificate e WHERE e.user = :id")})

public class Certificate implements Serializable {
    /*
   ========================================================
   Instance variables representing the attributes (columns)
   of the database table Certificate.

   CREATE TABLE Certificate
   (
        id int unsigned NOT NULL AUTO_INCREMENT,
        user int unsigned NOT NULL,
        name varchar(255) NOT NULL,
        dateObtained date NOT NULL,
   );
   ========================================================
    */
    private static final long serialVersionUID = 1L;
    /*
    Primary Key id is auto generated by the system as an Integer value
    starting with 1 and incremented by 1, i.e., 1,2,3,...
    A deleted entity object's primary key number is not reused.
     */
    // id INT UNSIGNED NOT NULL AUTO_INCREMENT
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Basic(optional = false)
    @Column(name = "id")
    private Integer id;

    @Basic(optional = false)
    @Column(name = "user")
    private Integer user;

    // name VARCHAR(255) NOT NULL
    @Basic(optional = false)
    @NotNull
    @Size(min = 1, max = 255)
    @Column(name = "name")
    private String name;

    // dateObtained date NOT NULL
    @Basic(optional = false)
    @NotNull
    @Column(name = "dateObtained")
    private Date dateObtained;

}
